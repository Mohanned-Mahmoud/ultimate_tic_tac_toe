name: Backend Tests

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-inline-tests:
    name: Backend Inline Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set Up Node.js Environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Mocha and Chai
      - name: Install Testing Dependencies
        run: |
          npm install --save-dev mocha chai

      # Step 4: Create Inline Test Script
      - name: Create Backend Test Script
        run: |
          echo "const { expect } = require('chai');" > inlineTest.js
          echo "describe('Backend Inline Tests', () => {" >> inlineTest.js
          echo "  it('should make a valid move', () => {" >> inlineTest.js
          echo "    const board = [[" >> inlineTest.js
          echo "      [null, null, null]," >> inlineTest.js
          echo "      [null, null, null]," >> inlineTest.js
          echo "      [null, null, null]" >> inlineTest.js
          echo "    ]];" >> inlineTest.js
          echo "    const move = { row: 1, col: 1, player: 'X' };" >> inlineTest.js
          echo "    board[move.row][move.col] = move.player;" >> inlineTest.js
          echo "    expect(board[1][1]).to.equal('X');" >> inlineTest.js
          echo "  });" >> inlineTest.js
          
          echo "  it('should detect a win', () => {" >> inlineTest.js
          echo "    const board = [[" >> inlineTest.js
          echo "      ['X', 'X', 'X']," >> inlineTest.js
          echo "      [null, null, null]," >> inlineTest.js
          echo "      [null, null, null]" >> inlineTest.js
          echo "    ];" >> inlineTest.js
          echo "    const isWin = board[0].every(cell => cell === 'X');" >> inlineTest.js
          echo "    expect(isWin).to.be.true;" >> inlineTest.js
          echo "  });" >> inlineTest.js
          
          echo "  it('should detect a draw', () => {" >> inlineTest.js
          echo "    const board = [[" >> inlineTest.js
          echo "      ['X', 'O', 'X']," >> inlineTest.js
          echo "      ['O', 'X', 'O']," >> inlineTest.js
          echo "      ['O', 'X', 'O']" >> inlineTest.js
          echo "    ];" >> inlineTest.js
          echo "    const isDraw = board.flat().every(cell => cell !== null);" >> inlineTest.js
          echo "    expect(isDraw).to.be.true;" >> inlineTest.js
          echo "  });" >> inlineTest.js
          echo "});" >> inlineTest.js

      # Step 5: Run the Inline Tests
      - name: Run Inline Backend Tests
        run: npx mocha inlineTest.js

      # Step 6: Upload Test Results
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-inline-test-results
          path: ./inlineTest.js
          if-no-files-found: warn

      # Step 7: Success Message
      - name: Success
        run: echo "âœ… Backend Inline Tests Completed Successfully!"
